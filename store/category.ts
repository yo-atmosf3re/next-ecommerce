import { create } from 'zustand';

// " Плюсы Zustand:
// " 1. Храним состояние в объекте, который создаётся с помощью create;
// " 2. Обновление состояние с помощью, например, функции set, которую менеджер создаёт автоматически;
// " 3. Гибкое управление состояние с помощью хука, который возвращается в результате использования create;
// " 4. Легковесный - без всяких настроек работает вот так, из коробки, без бойлерплэйта;
// " 5. Создаёт только нужные хранилища, например, как в этом файле;
// " 5. Не нужно городить редьюсеры, экшены, сторы - как сказано выше - нет бойлерплейта, почти;
// " 6. Поддержка React Hooks для упрощенного осмысления и использования по всему проекту;
// " 7. Не требует middleware для асинхронных операций, поддерживает работу с асинхронщиной из коробки;

interface StateI {
  activeId: number;
  setActiveId: (activeId: number) => void;
}

/**
 * Хук для использования хранилища состояний категорий с помощью Zustand;
 * 
 * @returns объект с текущим activeId и функцией setActiveId для его изменения;
 */
export const useCategoryStore = create<StateI>()((set) => ({
    // ? Инициализация со значением в переменной и функция, которое это значение будет устанавливать (изменять);
  activeId: 1,
  setActiveId: (activeId: number) => set({ activeId }),
}));
